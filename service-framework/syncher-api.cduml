@startuml

interface SyncSubscription {
  url: HypertyURL
}

interface SyncStatus {
  status: on | paused | waiting
  pause(): void
  resume(): void
  stop(): void
}

class Syncher {
  owner: HypertyInstance
  __
  constructor(...)
  create(...): Promise<DataObjectReporter>
  subscribe(...): Promise<DataObjectObserver>
  read(url: ObjectURL): Promise<JSON>
  resumeReporters(criteria?: ResumeCriteria)
  resumeObservers(criteria?: ResumeCriteria)
  __ event handlers __
  onNotification(callback: (event: CreateEvent | DeleteEvent) => void): void
  onObservers(callback: (event: observers: [DataObjectObserver]) => void): void
  onReporters(callback: (event: reporters: [DataObjectReporter]) => void): void
}

class DataObject {
  owner: HypertyInstance
  syncObj: SyncDataObject.SyncObject
  metadata: SyncDataObject.SyncMetadata
  childrenObjects: DataObjectChild{}
  __
  addChild(...): Promise<DataObjectChild>
  addHypertyResource(...): Promise<HypertyResource>
  resumeChildrens(childrens: Object)
  __ event handlers __
  onChange(filter: string, callback: (event: ChangeEvent) => void): void
  onAddChild(callback: (event: CreateEvent) => void): void
}

class DataObjectChild {
  owner: HypertyInstance
  parentObject: DataObject
  syncObj: SyncDataObject.SyncObject
  metadata: SyncDataObject.SyncMetadata
  __
  delete()
  __ event handlers __
  onResponse(callback: (event: ReponseEvent) => void): void
  onChange(callback: (event: ChangeEvent) => void): void
}

class DataObjectReporter {
  inviteObservers(observers: [HypertyURL]): void
  unsubscribe(observer: HypertyURL): Promise
  __ event handlers __
  onSubscription(callback: (event: SubscribeEvent | UnSubscribeEvent) => void): void
  onResponse(callback: (event: ReponseEvent) => void): void
  onRead(callback: (event: ReponseEvent) => void): void
}

class DataObjectObserver {
__
unsubscribe()
}


SyncSubscription --|> SyncStatus

DataObject --|> SyncStatus
DataObject *--"*" DataObjectChild:childrenObjects

DataObjectObserver ---|> DataObject

DataObjectReporter ---|> DataObject
DataObjectReporter *--"*" SyncSubscription:subscriptions

Syncher *--"*" DataObjectReporter:reporters
Syncher *--"*" DataObjectObserver:observers


@enduml
